name: Build, Publish and Deploy to Azure App Service

on:
  workflow_dispatch:
  push:
    branches: 
    - main

env:
  AZURE_WEBAPP_NAME: todoapivv
  AZURE_WEBAPP_PACKAGE_PATH: "./publish"

jobs:
  publish:
    runs-on: windows-latest

    steps:
    - name: Mendax Loop through numbers
      id: loop
      run: |
        for i in 1 2 3 4 5
        do
          echo "Mendax Current number: $i"
        done
        
    - uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
          
    - name: 'Get secrets'
      id: azure-keyvault-secrets
      run: |
        secrets_get=(GitHubActionSecret1 GitHubActionSecret2)
        for secret_get in ${secrets_get[@]}
        do
          value=$(az keyvault secret show --name $secret_get --vault-name vvenkataexpkv --query value --output tsv)
          echo "::add-mask::$value"
          echo "$secret_get=$value" >> $GITHUB_OUTPUT
        done
      #- uses: Azure/get-keyvault-secrets@v1
      #  with:
      #   keyvault: 'vvenkataexpkv'
      #    secrets: 'GitHubActionSecret'
      #   id: mySecrets

      # Starting from here you can use the secret using the 
      # steps.mySecrets.outputs.GitHubSecret variable
    
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available.

    - name: Cache SonaqrQube packages
      uses: actions/cache@v4
      with:
        path: ~\.sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarQube Scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path.\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner          

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore
      run: dotnet restore ./TodoApi.sln

    - name: Build and analyze
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"TodoApi" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
        dotnet build ./TodoApi.sln --configuration Release --no-restore
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
    #- name: Buid
    #  run: dotnet build ./TodoApi.sln --configuration Release --no-restore

    - name: Publish
      run: dotnet publish ./TodoApi.sln --configuration Release --no-build --output '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'

    - name: Deployment
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEB_APP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
